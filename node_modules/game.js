var debug = require('debug')('game.js');

function Game(){
    this.countpieces = 30;
}

Game.prototype.countpieces  = 0;
Game.prototype.pieces       = [];
Game.prototype.players      = [];
Game.prototype.bones        = [];

/*
    # Генерация значения костей
*/
Game.prototype.generateBones = function(){
    this.bones[0] = this.randomNumber(1 , 6);
    this.bones[1] = this.randomNumber(1 , 6);
};

/*
    # Функция генерирует случайные кости, отличие от предыдущей функции
    # это то, что кости не могут быть одинаковыми и не переходят ни в какие
    # глобальные переменные
*/
Game.prototype.generateLotBones = function(){
    var controll = true;
    var bone1 = 0;
    var bone2 = 0;
    
    while(controll){
        // Генерируем значение костей
        bone1 = this.randomNumber(1 , 6);
        bone2 = this.randomNumber(1 , 6);
        
        // предотвращаем одинаковое значение костей
        if(bone1 !== bone2) controll = false;
    }
    
    return [bone1 , bone2];
};

/*
    #
    # Генерируем фишки для игры
    #
*/
Game.prototype.generatePieces = function(){
    var controll = true;
    
    if(this.pieces.length !== 0){this.pieces = [];}
    for(var i = 0; i < this.countpieces; i++){
        while(controll){
            var random = this.randomNumber(1 , 1000);
            if(this.idPieceIsset(random)){
                this.pieces.push(random);
                controll = false;
            }
        }
        
        controll = true;
    }
};

Game.prototype.idPieceIsset = function(id){
    var controll = true;
    
    if(this.pieces.length !== 0){
        for(var i = 0; i < this.pieces.length; i++){
            if(this.pieces[i] === id){
                controll = false;
            }
        }
    }else{
        controll = true;
    }
    
    return controll;
};

/*
    #
    # Генерация случайного числа
    #
*/
Game.prototype.randomNumber = function (min, max){
    	var rand = min - 0.5 + Math.random()*(max-min+1);
    	rand = Math.round(rand);
    	return rand;
};

Game.prototype.clearGame = function(){
    this.players = [];
    this.pieces = [];
};

module.exports = Game;